name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test_and_build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          #- { os: ubuntu-latest, py: 2.7 }
          - { os: ubuntu-latest, py: 3.8, doc: 1 }
          - { os: windows-latest, py: 3.8, exe: 1, whl: 1 }
          - { os: macos-latest, py: 3.8, whl: 1 }
          # Need mac/windows in all varieties in order to build wheels.
          # TODO: switch to stable abi
          #- { os: windows-latest, py: 3.6 }
          #- { os: windows-latest, py: 3.7 }
          #- { os: windows-latest, py: 3.8, exe: 1 }
          #- { os: windows-latest, py: 3.9 }
          #- { os: macos-latest, py: 3.6 }
          #- { os: macos-latest, py: 3.7 }
          #- { os: macos-latest, py: 3.8 }
          #- { os: macos-latest, py: 3.9 }

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.config.py }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.config.py }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel setuptools
        python -m pip install numpy scipy matplotlib bumps periodictable scikit-learn pytest pytest-cov
        python setup.py build_ext --inplace
        python setup.py build
        mkdir release

    - name: Run tests
      run: |
        pytest -v
        python check_examples.py --chisq
      env:
        MPLBACKEND: agg

    - name: Check that the docs build (linux only)
      if: matrix.config.doc == 3
      run: |
        python -m pip install sphinx
        make -j 4 -C doc SPHINXOPTS="-W --keep-going" html

    - name: Build binary wheel
      if: matrix.config.whl == 1
      run: |
        python setup.py bdist_wheel
    
    - name: Build installer
      if: matrix.config.exe == 1
      run: |
        pwsh -command ".\$GITHUB_WORKSPACE\extra\build_win_installer.ps1"
        mv dist\Refl1D*.zip release\Refl1D_latest.zip

    - name: Build source distribution
      run: |
        python setup.py sdist

    # See the following for how to upload to a release
    #  https://eugene-babichenko.github.io/blog/2020/05/09/github-actions-cross-platform-auto-releases/
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: |
          dist/*.whl
          dist/*.zip
          dist/*.tar.gz
          release/*.zip

  publish:
    needs: test_and_build
    runs-on: ubuntu-latest
    steps:
    - name: Retrieve all artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
    
    - name: show files
      run: |
        ls * -l

    - name: Update release
      uses: johnwbyrd/update-release@v1.0.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        release: unstable
        tag: sid
        files: release\Refl1D_latest.zip

    - name: publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        skip_existing: true
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/